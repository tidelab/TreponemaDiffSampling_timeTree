lR = lR[round(0.1*len):len,] %>% gather("cluster", "lambda_ratio")
lR$variant = ifelse(grepl("BA", lR$cluster), "Omicron", "Delta")
lR = lR %>% select(-contains("AY.121Clust13"))
lR
lR %>% select(-contains("AY.121Clust13"))
lR %>% select(-contains("Clust13"))
lR %>% filter(cluster != "AY.121Clust13")
test = lR %>% filter(cluster == "AY.121Clust13")
ggplot(test) + geom_density(aes(x=lambda_ratio, group=cluster, colour=variant, fill=variant), alpha=0.3)
ggplot(lR) + geom_density(aes(x=lambda_ratio, group=cluster, colour=variant, fill=variant), alpha=0.3)
unique(lR$cluster)
lR = lR %>% filter(cluster != "AY.121Clust13")
unique(lR$cluster)
ggplot(lR) + geom_density(aes(x=lambda_ratio, group=cluster, colour=variant, fill=variant), alpha=0.3)
source("~/Documents/BDSKY/LambdaRatio/Data/BerlinDec2021/PlotLRdensitiesMultipleClusters.R")
het=-1548336.5250625696
iso=-1548330.581013377
het -iso
het=-1556620.0585058487
iso=-1556606.9520503825
het-iso
knitr::opts_chunk$set(echo = TRUE, engine.opts = list(bash = "-l"))
URLFolder = "/Users/weber/Documents/PhD/IntroductionSimulations/BDSKY/FixedTopology/"
Sys.setenv(URLFolder=URLFolder)
#area = ""                                       #NOTE: has to be adjusted
#Sys.setenv(area=area)
dvar = "2023-08-25"                                      #NOTE: has to be adjusted
Sys.setenv(dvar=dvar)
subsample = ""
Sys.setenv(subsample=subsample)
seed=69875#3095
Sys.setenv(seed=seed)
NumSim=10
Sys.setenv(NumSim=NumSim)
MinClustSize=2
Sys.setenv(MinClustSize=MinClustSize)
#folder = paste(area, dvar, sep="_")
#Sys.setenv(folder=folder)
#URLComp = paste(URLFolder, folder, sep="")
URLComp = paste(URLFolder, dvar, sep="")
Sys.setenv(URLComp=URLComp)
setwd(URLComp)
URLfiles = "/Users/weber/Documents/PhD/IntroductionSimulations/BDSKY/FixedTopology"
Sys.setenv(URLfiles=URLfiles)
library(seqinr)
library(dplyr)
library(knitr)
library(treeio)
#library(ape)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE, engine.opts = list(bash = "-l"))
URLFolder = "/Users/weber/Documents/PhD/IntroductionSimulations/BDSKY/FixedTopology/"
Sys.setenv(URLFolder=URLFolder)
#area = ""                                       #NOTE: has to be adjusted
#Sys.setenv(area=area)
dvar = "2023-08-25"                                      #NOTE: has to be adjusted
Sys.setenv(dvar=dvar)
subsample = ""
Sys.setenv(subsample=subsample)
seed=69875#3095
Sys.setenv(seed=seed)
NumSim=10
Sys.setenv(NumSim=NumSim)
MinClustSize=2
Sys.setenv(MinClustSize=MinClustSize)
#folder = paste(area, dvar, sep="_")
#Sys.setenv(folder=folder)
#URLComp = paste(URLFolder, folder, sep="")
URLComp = paste(URLFolder, dvar, sep="")
Sys.setenv(URLComp=URLComp)
setwd(URLComp)
URLfiles = "/Users/weber/Documents/PhD/IntroductionSimulations/BDSKY/FixedTopology"
Sys.setenv(URLfiles=URLfiles)
library(seqinr)
library(dplyr)
library(knitr)
library(treeio)
#library(ape)
knitr::opts_chunk$set(echo = TRUE)
treeFile = "/Users/weber/Documents/PhD/IntroductionSimulations/BDSKY/EstimatedTopology/2023-03-27/BDSKY/min2long/1/InsideVSOutside_Tree_9891.nexus"
tree = read.beast(treeFile)
nodeLabelsMig = tree@data$node[tree@data$reaction == "Migration"]
tree
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (subtree@phylo$Nnode < minTips) {
return(subtree@phylo$Nnode)
} else {
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
subTreesIntros
IntroSizes = unlist(subTreesIntros[sapply(subTreesIntros, is.integer)])
IntroSizes
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (subtree@phylo$Nnode == minTips) {
return("2")
}
if (subtree@phylo$Nnode < minTips) {
return(subtree@phylo$Nnode)
} else {
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, minTips)
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
IntroSizes = unlist(subTreesIntros[sapply(subTreesIntros, is.integer)])
IntroSizes
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (subtree@phylo$Nnode < minTips) {
return(subtree@phylo$Nnode)
} else {
print(subtree@phylo$Nnode)
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (subtree@phylo$Nnode < minTips) {
return(subtree@phylo$Nnode)
} else {
if (subtree@phylo$Nnode == minTips) {
print(subtree)
}
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
subTreesIntros[1]
subTreesIntros[2]
subTreesIntros[3]
subTreesIntros[10]
subTreesIntros[11]
subTreesIntros[12]
subTreesIntros[23]
subTreesIntros[24]
subTreesIntros[94]
t=subTreesIntros[94]
t@phylo
t=subTreesIntros[[94]]
t
t@phylo
t@phylo$tip.label
t@tip_seq
t@info
print(subtree@phylo$Nnode)
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (length(subtree@phylo$tip.labels) == 1 ) {
print(subtree@phylo$Nnode)
}
if ((subtree@phylo$Nnode+1) < minTips) {
return(subtree@phylo$Nnode+1)
} else {
if (subtree@phylo$Nnode+1 == minTips) {
print(subtree)
}
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (length(subtree@phylo$tip.labels) == 1 ) {
print(subtree@phylo$Nnode)
}
if ((subtree@phylo$Nnode+1) < minTips) {
return(subtree@phylo$Nnode+1)
} else {
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (length(subtree@phylo$tip.label) == 1 ) {
print(subtree@phylo$Nnode)
}
if ((subtree@phylo$Nnode+1) < minTips) {
return(subtree@phylo$Nnode+1)
} else {
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (length(subtree@phylo$tip.label) == 1 ) {
print(subtree@phylo)
}
if ((subtree@phylo$Nnode+1) < minTips) {
return(subtree@phylo$Nnode+1)
} else {
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (length(subtree@phylo$tip.label) < minTips) {
return(length(subtree@phylo$tip.label))
print(subtree@phylo)
} else {
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
cutSubTree = function(nameNum,tree,migNodes,minTips) {
subtree = tree_subset(tree, node = strtoi(migNodes[nameNum]), levels_back = 0, root_edge = FALSE)
if (length(subtree@phylo$tip.label) < minTips) {
print(subtree@phylo)
return(length(subtree@phylo$tip.label))
} else {
return(subtree)
}
}
subTreesIntros = sapply(as.list(1:length(nodeLabelsMig)), cutSubTree, tree, nodeLabelsMig, 2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
73/(32.85+3.65)
knitr::opts_chunk$set(echo = TRUE, engine.opts = list(bash = "-l"))
URLFolder = "/Users/weber/Documents/PhD/IntroductionSimulations/BDSKY/FixedTopology/"
Sys.setenv(URLFolder=URLFolder)
#area = ""                                       #NOTE: has to be adjusted
#Sys.setenv(area=area)
dvar = "2023-09-08"                                      #NOTE: has to be adjusted
Sys.setenv(dvar=dvar)
subsample = ""
Sys.setenv(subsample=subsample)
seed=8903#3095
Sys.setenv(seed=seed)
NumSim=10
Sys.setenv(NumSim=NumSim)
MinClustSize=1
Sys.setenv(MinClustSize=MinClustSize)
#folder = paste(area, dvar, sep="_")
#Sys.setenv(folder=folder)
#URLComp = paste(URLFolder, folder, sep="")
URLComp = paste(URLFolder, dvar, sep="")
Sys.setenv(URLComp=URLComp)
setwd(URLComp)
URLfiles = "/Users/weber/Documents/PhD/IntroductionSimulations/BDSKY/FixedTopology"
Sys.setenv(URLfiles=URLfiles)
library(seqinr)
library(dplyr)
library(knitr)
library(treeio)
#library(ape)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
het=-1548336.5250625696
iso=-1548330.581013377
het-iso
het=-1559886.7529064151
iso=-1559924.2532075013
het-iso
isoOld = -1559861.0153439892
iso-isoOld
isofix=-1548327.7094335745
isofixall=-1548358.079654139
iso=-1548330.581013377
het=-1548336.5250625696
isofix-isofixall
het-iso
het-isofix
het-isofixall
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
detach("package:datasets", unload = TRUE)
detach("package:ggplot2", unload = TRUE)
detach("package:tibble", unload = TRUE)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(lubridate)
write_tsv(a, "test.txt")
a
a=ymd("2020-30-11")
a=ymd("2020-11-30")
a
a=ymd("2020-08-10")
a=ymd("2020-30-11")
a=ymd("2020-11-30")
b=ymd("2020-08-10")
a-b
dat=data.frame(FSO=(a-b)/365.25)
write_tsv(dat,"FSO.txt")
getwd
getwd()
(a-b)/365.25
phytools::nodeHeights
tree = read.beast("/Users/weber/Documents/PhD/IntroductionSimulations/BDMM-PRIME/EstimatedTopology/test/2023-09-08/1/InsideVSOutside_Tree_89031.nexus")
library(treeio)
tree = read.beast("/Users/weber/Documents/PhD/IntroductionSimulations/BDMM-PRIME/EstimatedTopology/test/2023-09-08/1/InsideVSOutside_Tree_89031.nexus")
tree
tree@phylo
max(nodeHeights(tree))
library(phylotools)
max(nodeHeights(tree))
library(phytools)
max(nodeHeights(tree))
max(nodeHeights(tree@phylo))
tree@info
tree@data
tree@extraInfo
tree@anc_seq
max(nodeHeights(tree@phylo))
getwd()
a = data.frame(FSO = 0.4312)
write_tsv(a)
write_tsv(a, "test")
a = data.frame(FSO = c(0.4312, 0.342, 0.342))
write_tsv(a, "test")
tree@phylo
subtree = tree_subset(tree, node = strtoi(tree@data$node[tree@data$reaction == "Migration"][1]), levels_back = 0, root_edge = FALSE)
subtree
subtree@phylo
subtree@phylo$tip.label
subtree
tree
tree@data
tree@data$time == 0.0
tree@data[tree@data$time == 0.0]
tree@data$node[tree@data$time == 0.0]
sum(tree@data$time == 0.0)
min(tree@data$time)
tree@data$node[min(tree@data$time)]
tree@data$node
tree@data$node[tree@data$time == min(tree@data$time)]
tree@data
subtree@data
subtree2 = tree_subset(tree, node = strtoi(tree@data$node[tree@data$reaction == "Migration"][2]), levels_back = 0, root_edge = FALSE)
subtree2@data
subtree3 = tree_subset(tree, node = strtoi(tree@data$node[tree@data$reaction == "Migration"][3]), levels_back = 0, root_edge = FALSE)
subtree3@data
fullHeight = max(nodeHeights(tree@phylo))
fullHeight
max(tree@data$time)
tree@data$node[tree@data$time == mac(tree@data$time)]
tree@data$node[tree@data$time == max(tree@data$time)]
tree@data[,166]
tree@data[166,]
tree@data[tree@data$node == 166,]
height3 = max(subtree3@data$time)
fullHeight - height3
fullHeight
height3
as.double(height3)
a
a$zweibla = c(0321,43,123)
a
write_tsv(a, "test.txt")
?hablar
0.257/0.985
702 + 283 + 367 + 210 + 688 + 621 + 345 + 160 + 1390
strictHET = -1592195.006344234
strictISO = -1592197.4134624682
relaxedHET = -1592187.863455862
relaxedISO = -1592178.1106568382
data = data.frame(data=c(strictHET, strictISO, relaxedHET, relaxedISO))
ggplot(data, aes(y=data)) + geom_point()
library(ggplot2)
ggplot(data, aes(y=data)) + geom_point()
ggplot(data, aes(x=data)) + geom_point()
data
data = data.frame(names = c("strict het", "strict iso", "relaxed het", "relaxed iso"), vals=c(strictHET, strictISO, relaxedHET, relaxedISO))
ggplot(data, aes(xnames, y=vals)) + geom_point() + geom_line()
ggplot(data, aes(x=names, y=vals)) + geom_point() + geom_line()
ggplot(data, aes(x=names, y=vals)) + geom_line()
ggplot(data, aes(x=names, y=vals)) + geom_line() + geom_point()
data
relaxExpHET = -1592185.1972603272
relaxExpISO = -1592170.4781257533
relaxExpHET - relaxExpISO
relaxLNHET = -1592187.863455862
relaxLNISO = -1592178.1106568382
strictHET = -1592195.006344234
strictISO = -1592197.4134624682
library(ggplot2)
data = data.frame(val = c(relaxExpHET, relaxExpISO, relaxLNHET, relaxLNISO, strictHET, strictISO))
data
data = data.frame(val = c(relaxExpHET, relaxExpISO, relaxLNHET, relaxLNISO, strictHET, strictISO), setup= c("relaxExpHET", "relaxExpISO", "relaxLNHET", "relaxLNISO", "strictHET", "strictISO"))
data
ggplot() + geom_point(data, aes(x=setup, y=val))
ggplot(data, aes(x=setup, y=val)) + geom_point()
ggplot(data, aes(x=setup, y=val)) + geom_point() + geom_line()
ggplot(data, aes(x=setup, y=val)) +geom_line()
ggplot(data, aes(x=setup, y=val, group=1)) +geom_line()
ggplot(data, aes(x=setup, y=val, group=1)) + geom_point() + geom_line()
het = -1548336.5250625696
iso = -1548327.7094335745
het-iso
hetstrict = NA
isostrict = -1548356.6492398195
data2=(val=c(het, iso, hetstrict, isostrict), name=c("het", "iso", "hetstrict", "isostrict"))
data2=data.frame(val=c(het, iso, hetstrict, isostrict), name=c("het", "iso", "hetstrict", "isostrict"))
ggplot(data2, aes(x=name, y=val, group=1)) + geom_point() + geom_line()
data2=data.frame(val=c(het, iso, hetstrict, isostrict), name=c("het", "iso", "stricthet", "strictiso"))
ggplot(data2, aes(x=name, y=val, group=1)) + geom_point() + geom_line()
relhet = -1559871.4529870052
reliso = -1559863.8945511987
striso = -1559924.2532075013
relFixiso = -1559924.2532075013
library(devtools)
install_github( 'emvolz/treedater')
vignette('h3n2')
setwd("/Users/weber/Documents/PhD/Collaborations/Karen_AGU007/Dating")
tree = ape::read.tree("RAxML_bestTree.ML1000GTRGAMMACFMLNicsitesHomprm7_CD")
plot(tree)
vignette('h3n2')
?sampleYearsFromLabels
?treedater::sampleYearsFromLabels
sts = sampleYearsFromLabels(tree$tip.label, dateFormat = "%Y", delimiter="_")
require(treedater)
sts = sampleYearsFromLabels(tree$tip.label, dateFormat = "%Y", delimiter="_")
sts
?Date
?treedater::Date
hist(sts)
seqlen = 1139633
dtr = dater(tree , sts, seqlen, clock = 'strict' )
dtr = dater(tree , sts, seqlen, clock = 'strict', omega0=5*10^-7)
seqlen = 1658
dtr = dater(tree , sts, seqlen, clock = 'strict', omega0=5*10^-7)
dtr = dater(tree , sts, seqlen, clock = 'strict')
sts
setwd("/Users/weber/Documents/PhD/Collaborations/Karen_AGU007/FinaleDaten/CD")
tree = ape::read.tree("snpAlignment_yaws_CD_5X_no133inalignment.fasta.treefile")
sts = sampleYearsFromLabels(tree$tip.label, dateFormat = "%Y", delimiter="_")
seqlen = 1658
dtr = dater(tree , sts, seqlen, clock = 'strict')
#setwd("/Users/weber/Documents/PhD/Collaborations/Karen_AGU007/Dating")
setwd("/Users/weber/Documents/PhD/Collaborations/Karen_AGU007/FinaleDaten/CD")
tree = ape::read.tree("snpAlignment_yaws_CD_5X_no133inalignment.fasta.treefile")
sts = sampleYearsFromLabels(tree$tip.label, dateFormat = "%Y", delimiter="_")
seqlen = 1658
dtr = dater(tree , sts, seqlen, clock = 'strict')
knitr::opts_chunk$set(echo = TRUE)
require(treedater)
#setwd("/Users/weber/Documents/PhD/Collaborations/Karen_AGU007/Dating")
setwd("/Users/weber/Documents/PhD/Collaborations/Karen_AGU007/FinaleDaten/CD")
tree = ape::read.tree("snpAlignment_yaws_CD_5X_no133inalignment.fasta.treefile")
sts = sampleYearsFromLabels(tree$tip.label, dateFormat = "%Y", delimiter="_")
seqlen = 1658
dtr = dater(tree , sts, seqlen, clock = 'strict')
Plot(dtr)
plot(dtr)
rootToTipRegressionPlot(dtr)
outliers = outlierTips(dtr , alpha = 0.20)
rct = relaxedClockTest(tre2, sts, seqlen, ncpu = 6)
rct = relaxedClockTest(tree, sts, seqlen, ncpu = 6)
goodnessOfFitPlot(dtr)
goodnessOfFitPlot(rct)
?curve
curve(dexp, 1.0)
curve(dexp(rate=1.0))
curve(dexp(x, rate=1.0), col="blue")
curve(dexp(x, rate=1.0), col="blue", from=0.0, to=5.0)
curve(dexp(x, rate=5*10-8), col="green", from=0.0, to=5.0)
curve(dexp(x, rate=5*10^-8), col="green", from=0.0, to=5.0)
curve(dexp(x, rate=5*10^-8), col="green", from=0.0, to=5.0)
curve(dexp(x, rate=5*10^-8), col="green", from=0.0, to=50.0)
curve(dexp(x, rate=5*10^-8), col="green")
curve(dexp(x, rate=5*10^-8), col="green", from=0.0, to=5000.0)
curve(dexp(x, rate=5*10^-8), col="green", from=0.0, to=50000000.0)
curve(dexp(x, rate=5*10^-8), col="green", from=0.0, to=5000000000.0)
curve(dexp(x, rate=5*10^-8), col="green", from=0.0, to=500000000.0)
curve(dlnorm(x, log(5*10^-8), log(1+(1/5*10^-16))))
curve(dlnorm(x, log(5*10^-8), log(1+(1/5*10^-16))), from=0.0, to=50000000)
curve(dlnorm(x, log(5*10^-8), log(1+(1/5*10^-16))), from=0.0, to=0.0005)
curve(dlnorm(x, 10, 1, from=0.0, to=100)
)
curve(dlnorm(x, 10, 1), from=0.0, to=100)
curve(dlnorm(x, meanlog=10, meansd=1), from=0.0, to=100)
curve(dlnorm(x, meanlog=10, sdlog = 1), from=0.0, to=100)
curve(dlnorm(x, meanlog=10, sdlog = 1), from=0.0, to=10000)
curve(dlnorm(x, meanlog=10, sdlog = 1), from=0.0, to=1000000)
curve(dlnorm(x, meanlog=1, sdlog = 1), from=0.0, to=1000000)
curve(dexp(x, rate=5), col="green", from=0.0, to=50000000.0)
curve(dexp(x, rate=5), col="green", from=0.0, to=5000)
curve(dexp(x, rate=5), col="green", from=0.0, to=50)
curve(dexp(x, rate=5), col="green", from=0.0, to=5)
curve(dexp(x, rate=50), col="green", from=0.0, to=5)
curve(dexp(x, rate=5), col="blue", from=0.0, to=5)
curve(dexp(x, rate=50), col="green", from=0.0, to=5, add=TRUE)
curve(dexp(x, rate=1), col="red", from=0.0, to=5, add=TRUE)
het =-1548336.5250625696
strictHet =-1548336.5250625696
strictIso = strictHET = -1548352.7963209131
strictHET = -1548352.7963209131
strictISO = -1548356.6492398195
relaxedHET = -1548336.5250625696
relaxedISO = -1548327.7094335745
data = data.frame(vals = c(strictHET, strictISO, relaxedHET, relaxedISO), name=c("strictHET", "strictISO", "relaxedHET", "relaxedISO")
)
data
ggplot(data, aes(x=name, y=vals, group=1)) + geom_point() + geom_line()
